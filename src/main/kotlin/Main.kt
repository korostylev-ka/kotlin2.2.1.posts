data class Post(
   val id: Int, //Идентификатор записи.
   val ownerId: Int, //Идентификатор владельца стены, на которой размещена запись
   val fromId: Int, //Идентификатор автора записи (от чьего имени опубликована запись).
   val createdBy: Int, //Идентификатор администратора, который опубликовал запись.
   val date: Int, //Время публикации записи
   val text: String, //Текст записи.
   val replyOwnerId: Int, //Идентификатор владельца записи, в ответ на которую была оставлена текущая
   val replyPostId: Int, //Идентификатор записи, в ответ на которую была оставлена текущая
   val friendsOnly: Boolean, // если запись была создана с опцией «Только для друзей».
   val comments: Comments, //Информация о комментариях к записи, объект с полями:
   val copyright: Copyright, //Источник материала, объект с полями:
   val likes: Likes,    //Информация о лайках к записи, объект с полями:
   val reposts: Reposts,    //Информация о репостах записи («Рассказать друзьям»), объект с полями:
   val views: Views,    //Информация о просмотрах записи. Объект с единственным полем:
   val postType: String, //Тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest.
   val signerId: Int,   //Идентификатор автора, если запись была опубликована от имени сообщества и подписана пользователем
   //val copyHistory: Array<T>, //Массив, содержащий историю репостов для записи.
   val canPin: Boolean, //Информация о том, может ли текущий пользователь закрепить запись
   val canDelete: Boolean,






)
//Информация о комментариях к записи, объект с полями:
data class Comments(
    val count: Int, //количество комментариев
    val canPost: Boolean,  // информация о том, может ли текущий пользователь комментировать запись
    val groupsCanPost: Boolean,   // информация о том, могут ли сообщества комментировать запись
    val canClose: Boolean,  //может ли текущий пользователь закрыть комментарии к записи
    val canOpen: Boolean   //может ли текущий пользователь открыть комментарии к записи
)

//Источник материала, объект с полями:
data class Copyright(
    val id: Int,
    val link: String,
    val name: String,
    val type: String
)

//Информация о лайках к записи, объект с полями:
data class Likes(
    val count: Int, //число пользователей, которым понравилась запись
    val userLikes: Boolean,    // наличие отметки «Мне нравится» от текущего пользователя
    val canLike: Boolean,  //информация о том, может ли текущий пользователь поставить отметку «Мне нравится»
    val canPublish: Boolean // информация о том, может ли текущий пользователь сделать репост записи
)

//Информация о репостах записи («Рассказать друзьям»), объект с полями:
data class Reposts(
    val count: Int, //число пользователей, скопировавших запись;
    val userReposted: Boolean   //наличие репоста от текущего пользователя
)

//Информация о просмотрах записи. Объект с единственным полем:
data class Views(
    val count: Int //число просмотров записи
)


